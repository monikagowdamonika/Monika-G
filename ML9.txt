from sklearn.datasets import load_iris
import pandas
iris=load_iris()
x=pandas.DataFrame(iris.data)
x.columns=['sepal_length','sepal_width','petal_length','petal_width']
y=pandas.DataFrame(iris.target)
y.columns=['targets']

import numpy
colormap=numpy.array(['red','lime','black'])

from sklearn.mixture import GaussianMixture
model=GaussianMixture(n_components=3).fit(x)
y_gm=model.predict(x)

from sklearn.metrics import accuracy_score,confusion_matrix
print('the accuracy score of the EM is :',accuracy_score(y,y_gm))
print('the confusion matrix of EM is :',confusion_matrix(y,y_gm))

from sklearn.cluster import KMeans
model=KMeans(n_clusters=3).fit(x)


print('accuracy score of the KMeans is :',accuracy_score(y,model.labels_))
print('the cofusion matrix of kMeans is :',confusion_matrix(y,model.labels_))

if(accuracy_score(y,y_gm) > accuracy_score(y,model.labels_)):
    print('accuracy of EM algorith is heigher than of KMeans algorithm')
else:
    print('accuracy of the KMeans algorithm is higher than of the EM algorithm')

from matplotlib import pyplot
pyplot.subplot(1,3,1)
pyplot.scatter(x.petal_length,x.petal_width,c=colormap[y.targets],s=10)
pyplot.title('Original Classification')
pyplot.xlabel('petal length')
pyplot.ylabel('petal width')

pyplot.subplot(1,3,2)
pyplot.scatter(x.petal_length,x.petal_width,c=colormap[y_gm],s=10)
pyplot.title('GM classification')
pyplot.xlabel('patel length')
pyplot.ylabel('peta; width')

pyplot.subplot(1,3,3)
pyplot.scatter(x.petal_length,x.petal_width,c=colormap[model.labels_], s=10)
pyplot.title('KMeans classification')
pyplot.xlabel('petal length')
pyplot.ylabel('petal width')
pyplot.show()

